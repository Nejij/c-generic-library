.TH "/Users/matthieuriolo/Sourcecode/libgenc/branches/riolo/trunk/src/queue.c" 3 "Mon Aug 15 2011" ""c generic library"" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/matthieuriolo/Sourcecode/libgenc/branches/riolo/trunk/src/queue.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include 'node.h'\fP
.br
\fC#include 'queue.h'\fP
.br
\fC#include 'gen/error_macros.h'\fP
.br
\fC#include 'gen/access_macros.h'\fP
.br
\fC#include 'gen/control_macros.h'\fP
.br
\fC#include 'gen/function_macros.h'\fP
.br
\fC#include 'gen/control_arr_macros.h'\fP
.br
\fC#include 'gen/function_signatures.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBNUM_LINKS\fP   2"
.br
.RI "\fIa reusable queue class that takes any object \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBF_CONSTRUCT\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_CONSTRUCT_FUNC\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_DESTRUCT\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "int8_t \fBpush_QueueList\fP (\fBQueueList\fP *queue, void *obj, size_t objsize, int flag)"
.br
.RI "\fIpushes an item onto the end of a queue \fP"
.ti -1c
.RI "int8_t \fBpop_QueueList\fP (\fBQueueList\fP *queue)"
.br
.RI "\fIremoves the front item from the queue \fP"
.ti -1c
.RI "void * \fBfront_QueueList\fP (\fBQueueList\fP *queue)"
.br
.RI "\fIreturns a pointer to the front object so that it can be easily referenced \fP"
.ti -1c
.RI "\fBF_CLEAR\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_PRINT\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_EMPTY\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_SIZE\fP (\fBQueueList\fP)"
.br
.ti -1c
.RI "\fBcreate_iter_func\fP (Ptr_Based, \fBQueueList\fP)"
.br
.ti -1c
.RI "\fBF_CONSTRUCT_FUNC\fP (\fBQueueVector\fP)"
.br
.ti -1c
.RI "\fBF_DESTRUCT\fP (\fBQueueVector\fP)"
.br
.ti -1c
.RI "int8_t \fBpop_QueueVector\fP (\fBQueueVector\fP *queue)"
.br
.ti -1c
.RI "void * \fBfront_QueueVector\fP (\fBQueueVector\fP *queue)"
.br
.ti -1c
.RI "\fBF_CLEAR\fP (\fBQueueVector\fP)"
.br
.ti -1c
.RI "int8_t \fBpush_QueueVector\fP (\fBQueueVector\fP *queue, void *obj, size_t objsize, int flag)"
.br
.ti -1c
.RI "int8_t \fBresize_QueueVector\fP (\fBQueueVector\fP *queue, size_t size)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define NUM_LINKS   2"
.PP
a reusable queue class that takes any object Copyright 2006, All Rights Reserved, Micah Villmow 
.PP
\fBAuthor:\fP
.RS 4
Micah Villmow 
.RE
.PP

.PP
Definition at line 22 of file queue.c.
.SH "Function Documentation"
.PP 
.SS "create_iter_func (Ptr_Based, \fBQueueList\fP)"
.PP
Definition at line 133 of file queue.c.
.SS "F_CLEAR (\fBQueueList\fP)"
.PP
Definition at line 108 of file queue.c.
.SS "F_CLEAR (\fBQueueVector\fP)"
.PP
Definition at line 186 of file queue.c.
.SS "F_CONSTRUCT (\fBQueueList\fP)"
.PP
Definition at line 25 of file queue.c.
.SS "F_CONSTRUCT_FUNC (\fBQueueList\fP)"
.PP
Definition at line 35 of file queue.c.
.SS "F_CONSTRUCT_FUNC (\fBQueueVector\fP)"
.PP
Definition at line 149 of file queue.c.
.SS "F_DESTRUCT (\fBQueueVector\fP)"
.PP
Definition at line 160 of file queue.c.
.SS "F_DESTRUCT (\fBQueueList\fP)"
.PP
Definition at line 45 of file queue.c.
.SS "F_EMPTY (\fBQueueList\fP)"
.PP
Definition at line 123 of file queue.c.
.SS "F_PRINT (\fBQueueList\fP)"
.PP
Definition at line 113 of file queue.c.
.SS "F_SIZE (\fBQueueList\fP)"
.PP
Definition at line 129 of file queue.c.
.SS "void* front_QueueList (\fBQueueList\fP *queue)"
.PP
returns a pointer to the front object so that it can be easily referenced \fBParameters:\fP
.RS 4
\fIqueue\fP the queue to get the first item of 
.RE
.PP
\fBReturns:\fP
.RS 4
a pointer to the front object in the stack or NULL on failure 
.RE
.PP

.PP
Definition at line 101 of file queue.c.
.SS "void* front_QueueVector (\fBQueueVector\fP *queue)"
.PP
Definition at line 180 of file queue.c.
.SS "int8_t pop_QueueList (\fBQueueList\fP *queue)"
.PP
removes the front item from the queue \fBParameters:\fP
.RS 4
\fIqueue\fP the queue to remove the front item from 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, non-zero on failure 
.RE
.PP

.PP
Definition at line 83 of file queue.c.
.SS "int8_t pop_QueueVector (\fBQueueVector\fP *queue)"
.PP
Definition at line 168 of file queue.c.
.SS "int8_t push_QueueList (\fBQueueList\fP *queue, void *obj, size_tobjsize, intflag)"
.PP
pushes an item onto the end of a queue \fBParameters:\fP
.RS 4
\fIqueue\fP the queue to push an item into 
.br
\fIobj\fP the object to add to the queue 
.br
\fIobjsize\fP the size of the object to add 
.br
\fIflag\fP the flag for the object 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, non-zero on error 
.RE
.PP

.PP
Definition at line 59 of file queue.c.
.SS "int8_t push_QueueVector (\fBQueueVector\fP *queue, void *obj, size_tobjsize, intflag)"
.PP
Definition at line 197 of file queue.c.
.SS "int8_t resize_QueueVector (\fBQueueVector\fP *queue, size_tsize)"
.PP
Definition at line 210 of file queue.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for 'c generic library' from the source code.
